version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.5.7
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      RAILS_ENV: test
  postgres: &postgres
    image: circleci/postgres:11
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: app_test
      POSTGRES_PASSWORD: password

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - bundle-v4-{{ checksum "application/Gemfile.lock" }}
            - bundle-v4-
      - run:
          name: Bundle Install
          command: |
            cd application
            bundle check || bundle install
      - save_cache:
          key: bundle-v4-{{ checksum "application/Gemfile.lock" }}
          paths:
            - application/vendor/bundle
  rubocop:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-v4-{{ checksum "application/Gemfile.lock" }}
            - bundle-v4-
      - run:
          name: Bundle Install
          command: |
            cd application
            bundle check || bundle install
      - run:
          name: Run rubocop
          command: |
            cd application
            bundle exe rubocop
  brakeman:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-v4-{{ checksum "application/Gemfile.lock" }}
            - bundle-v4-
      - run:
          name: Bundle Install
          command: |
            cd application
            bundle check || bundle install
      - run:
          name: Run brekeman
          command: |
            cd application
            bundle exe brekeman
  test:
    parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-v4-{{ checksum "application/Gemfile.lock" }}
            - bundle-v4-
      - run:
          name: Bundle Install
          command: |
            cd application
            bundle check || bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            cd application
            bundle exec rake db:create
            bundle exec rails db:schema:load --trace
      - run:
          command: |
            cd application
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - store_test_results:
          path: application/tmp/test-results
      - store_artifacts:
          path: application/tmp/test-results
          destination: test-results
  
  deploy-prod:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: build docker image
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web application
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: push container to registry.heroku.com
          command: |
            cd application
            docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
            heroku container:push web --app ${HEROKU_APP_NAME}
            heroku container:release web --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - brakeman:
          requires:
            - build
      - test:
          requires:
            - build
            - rubocop
            - brakeman
      - deploy-prod:
          requires:
            - build
            - test
          filters:
            branches:
              only: master