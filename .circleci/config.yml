version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.5.7
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      RAILS_ENV: test
  postgres: &postgres
    image: circleci/postgres:11
    environment:
      POSTGRES_USER: root
      POSTGRES_DB: app_test
      POSTGRES_PASSWORD: password

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v
      # bundle cache
      - restore_cache:
          keys:
            - bundle-v4-{{ checksum "application/Gemfile.lock" }}
            - bundle-v4-
      - run:
          name: Bundle Install
          command: |
            cd application
            bundle check || bundle install
      # Store bundle cache
      - save_cache:
          key: bundle-v4-{{ checksum "application/Gemfile.lock" }}
          paths:
            - application/vendor/bundle
  test:
    parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-v4-{{ checksum "application/Gemfile.lock" }}
            - bundle-v4-
      - run:
          name: Bundle Install
          command: |
            cd application
            bundle check || bundle install
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: |
            cd application
            bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - run:
          command: |
            cd application
            mkdir /tmp/test-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $TESTFILES --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
      - store_test_results:
          path: application/tmp/test-results
      - store_artifacts:
          path: application/tmp/test-results
          destination: test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build